{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Welcome to pf-UBC"},{"location":"#the-phase-field-grain-growth-toolkit","title":"The Phase-Field Grain-Growth Toolkit","text":"<p> pf-UBC is a powerful and easy-to-use simulation tool designed to model grain growth in polycrystalline materials using the phase-field method. Built with researchers, students, and materials engineers in mind, it enables users to generate microstructures, simulate grain evolution, and visualize results with minimal setup. If you're studying grain boundary motion\u2014including the effects of fine, non-scalable particle pinning \u2014 pf-UBC offers a flexible and efficient platform to explore complex grain growth phenomena with scientific accuracy and a user-friendly design. </p>      Your browser does not support the video tag.    <p>This application was developed at The University of British Columbia, Vancouver, Canada</p>"},{"location":"#credits","title":"Credits","text":"<p>Dr. Ashish Dhole Dr. Matthias Militzer</p>"},{"location":"examples/","title":"Examples","text":"pf-UBC"},{"location":"examples/#grain-growth-with-uniform-constant-friction-pressure","title":"Grain Growth with Uniform Constant Friction Pressure","text":""},{"location":"examples/#grain-growth-with-non-uniform-constant-friction-pressure","title":"Grain Growth with Non-Uniform Constant Friction Pressure","text":""},{"location":"examples/#abnormal-grain-growth","title":"Abnormal Grain Growth","text":""},{"location":"examples/#3d-grain-growth","title":"3D Grain Growth","text":""},{"location":"getting_started/","title":"Getting Started","text":"pf-UBC"},{"location":"getting_started/#contents-of-the-package","title":"Contents of the package","text":"<p> The pf-UBC (Phase-Field at UBC) simulation toolkit is structured for clarity, modularity, and ease of use. Below is an annotated breakdown of the directory hierarchy: </p> <pre>\n             \u250c\u2500 pf-UBC\n             |  \u251c\u2500 Makefile\n             |  \u251c\u2500 launcher\n             |  \u251c\u2500 bin\n             \u2502     \u251c\u2500 generate_micro.sh\n             \u2502     \u251c\u2500 generate_micro_3d.sh\n             \u2502     \u251c\u2500 gg_run.sh\n             \u2502     \u251c\u2500 grain_growth.cpp\n             \u2502     \u251c\u2500 abnormal_gg_run.sh\n root_folder \u2502     \u251c\u2500 abnormal_grain_growth.cpp\n             \u2502     \u251c\u2500 real_gg_run.sh\n             \u2502     \u251c\u2500 real_grain_growth.cpp\n             \u2502     \u251c\u2500 gg_run_3d.sh\n             \u2502     \u2514\u2500 grain_growth_3d.cpp\n             |  \u251c\u2500 cluster_install.sh\n             |  \u251c\u2500 submit.sh\n             |  \u251c\u2500 real_submit.sh\n             |  \u251c\u2500 abnormal_submit.sh\n             |  \u2514\u2500 submit_3d.sh\n</pre>"},{"location":"getting_started/#summary-of-pf-ubc-directory-structure","title":"Summary of <code>pf-UBC</code> Directory Structure","text":"<p>--&gt; <code>bin/</code> \u2014 Simulation Scripts &amp; Executables Contains all executable scripts and C++ simulation code, clearly organized by simulation type (2D, 3D, abnormal, realistic):</p> <ul> <li><code>grain_growth.cpp</code> \u2192 2D simulation</li> <li><code>grain_growth_3d.cpp</code> \u2192 3D simulation</li> <li><code>abnormal_grain_growth.cpp</code> \u2192 Abnormal grain growth</li> <li><code>real_grain_growth.cpp</code> \u2192 Realistic grain growth</li> <li>Accompanied <code>.sh</code> scripts for each type automate execution</li> </ul> <p>--&gt; <code>Makefile</code> \u2014 Build Automation Simplifies compilation of all simulation binaries with a single command:</p> <p>--&gt; <code>launcher</code> \u2014 Intractive launch execution launcher serves as the entry point or interface script to guide users through simulation setup.</p> <p>--&gt; <code>shell sripts</code> \u2014 Cluster submission scripts Cluster support is integrated via the submit.sh scripts and cluster_install.sh, making the package suitable for both local and high-performance computing environments.</p>"},{"location":"getting_started/#installation","title":"Installation","text":"<p>After downloading the simulation toolkit folder from the repository, follow the folling command inside the <code>pf-UBC</code> folder</p> <pre><code>make install\n</code></pre> <p>This will check for all the required packages and if any on them are not installed already it will prompt the user to install on the local system. <code>cluster_install.sh</code> make all the shell scripts executable for smooth operation of the toolkit.</p>"},{"location":"getting_started/#running-conditions","title":"Running Conditions","text":"<p><code>pf-UBC</code> runs on all threads by default. The actual number of threads to use can be set at run stage, using the <code>OMP_NUM_THREADS</code> environment variable, as in</p> <pre><code>export OMP_NUM_THREADS=8\n</code></pre> <p>The environment variable is unset by default.</p>"},{"location":"getting_started/#launching-the-toolkit","title":"Launching the Toolkit","text":"<p>Once the toolkit is successfully installed, you can start the toolkit using launcher file.</p> <pre><code>./launcher\n</code></pre> <p>You will see the following screen on the terminal.</p> <pre><code>\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\n\n        Phase-Field Grain-Growth Toolkit       \n\n\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\n\n Generate Microstructure \n 1) Generate 2d microstructure\n 2) Generate 3d microstructure\n\n Generate Input Files \n 3) Create model input file\n 4) Create real input file\n\n Grain Growth Models \n 5) Run model grain-growth simulation\n 6) Run model 3d-grain-growth simulation\n 7) Run abnormal grain-growth simulation\n 8) Run real grain-growth simulation\n\n Exit! \n 9) Exit\n\n\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\u2592\u2591\n\nEnter choice [1-9]: \n</code></pre> <p>You will observe that there are three sections in the launcher</p> <ul> <li>Generate Microstructure</li> <li>Generate Input Files</li> <li>Grain Growth Models</li> </ul> <p>Each section perform the operation as mentioned. The toolkit is made in such a way that you don't have to strictly follow the steps. For example, if you already have a microstructure and an input file ready, you can straight away perform the required grain growth simulation by choosing between 5-6. After every operation, the launcher will show main screen again unless <code>9) Exit</code> is chosen.</p>"},{"location":"getting_started/#generate-microstructure","title":"Generate Microstructure","text":"<p>Generate Microstructure is a python based tool to create a microstructure of desired domain size and number of grains. By default the domain follows periodic boundary conditions in all directions and cannot be changed from the toolkit. But interested users can do madification in <code>bin/generate_micro.sh</code> or <code>bin/generate_micro_3d.sh</code> files.   This section has two sub-sections</p> <pre><code> Generate Microstructure \n 1) Generate 2d microstructure\n 2) Generate 3d microstructure\n</code></pre> <p>In <code>Generate 2d microstructure</code>, three files are generated, <code>micro.txt</code> (Grain ID map \u2014 each element in the array represents a grain label (an integer) at a grid point.), <code>micro.png</code> and <code>friction.txt</code> (A scalar field file representing the spatial distribution of friction pressure or drag resistance, used to control the local evolution of grain boundaries or transformation fronts.). Seed will asked down the line for repeatability.</p> <p>In <code>Generate 3d microstructure</code>, only one vtk file will be generated.</p> <p>Note: You can use the <code>Generate 3D microstructure</code> option to create both 2D and 3D initial microstructures by selecting the appropriate configuration. This gives users the flexibility to choose the output format\u2014either .png or .vti \u2014 which will be saved in the results/ folder once the simulation begins.</p> <p>If the user wishes to use another method to generate the initial microstructure, they may do so. However, they must convert it into a Grain ID map, where each element in the array represents a grain label (an integer) at a grid point. The file must be renamed to <code>micro.txt</code> (or <code>micro.vtk</code>) and saved in the root folder of the toolkit. The toolkit reads only <code>micro.txt</code> or <code>micro.vtk</code> as valid microstructure inputs.</p>"},{"location":"getting_started/#generate-input-files","title":"Generate Input Files","text":""},{"location":"introduction/","title":"Introduction","text":"pf-UBC"},{"location":"introduction/#grain-growth-model","title":"Grain Growth Model","text":"<p> The movement of grain boundaries (GBs) plays a fundamental role in the microstructural evolution of materials, as it enables the system to lower its total free energy. This energy reduction is influenced by several factors, including internal stresses, dislocation structures, and the energy associated with the grain boundaries themselves. To understand and predict this behavior, researchers have employed a variety of computational models.  Among the available techniques, the phase-field method stands out for its ability to simulate complex boundary interactions and morphological changes without explicitly tracking interfaces. Leveraging this approach, pf-UBC incorporates a multiphase grain growth model rooted in the pioneering studies by Chen and Yang (1994), Chen (1995), and refined further by Moelans et al. (2008). In this formulation, each grain is represented by an evolving order parameter that responds to energy gradients in the system. The temporal evolution of these parameters follows the Allen\u2013Cahn equation, capturing the physics of grain boundary motion, given by :   $$ \\frac{\\partial \\eta_i}{\\partial t} = -L \\frac{\\delta F}{\\delta \\eta_i} $$   where $F$ is the free energy functional, $L$ is the order parameter mobility, and the $\\delta$ operator represents a variational derivative.   $$ F = \\int_{V}^{} f_{loc}(\\eta_0, \\eta_1,..., \\eta_N) + f_{add}+\\kappa\\sum_{i}^{N}\\left| \\nabla \\eta_i \\right|^2 $$   where $N$ is the total number of order parameters, $f_{loc}$\u200b represents the local free energy density, and $f_{add}$\u200b represents any additional sources of energy density. $f_{loc}$ consists of two parts: (i) variation of local energy across the interface ($f_0$) and (ii) a contribution due to the internal bulk energy of the grains ($f_d$).   $$ f_{loc} = f_{0} + f_{d} $$   Here f0 is chosen to have a minimum of 0 inside each grain and a maximum at the interface resembling a double-well shape.  Based on the formulation of Chen and Yang (1994), $f_0$ is proposed as:   $$ f_0 = m\\left( \\sum_{i=1}^{N}\\frac{{\\eta_i}^4}{4} - \\sum_{i=1}^{N}\\frac{{\\eta_i}^2}{2} + \\frac{3}{2}\\sum_{i=1}^{N}\\sum_{j\\neq 1}^{N}{\\eta_i}^2 {\\eta_j}^2 + \\frac{1}{4}\\right) $$   where $m$ is a constant that determines the height of the energy peaks between each minima. Following Allen-Cahn dynamics, the evolution of the system results in a set of partial differential equation (PDEs):   $$ \\frac{\\partial{\\eta_i}}{\\partial t} = -L\\frac{\\delta{F}}{\\delta{\\eta_i}} = -L\\left( \\frac{\\partial{f_0}}{\\partial \\eta_i} - \\kappa\\nabla^2\\eta_i \\right) \\\\[1.5em] \\frac{\\partial{\\eta_i}}{\\partial t} = -L\\left[ m\\left( {\\eta_i}^3 - {\\eta_i} + 3\\eta_i \\sum_{j\\neq i}^{N} {\\eta_j}^2\\right) - \\kappa\\nabla^2 \\eta_i\\right] $$  </p> <p></p>"},{"location":"introduction/#friction-pressure","title":"Friction Pressure","text":"<p> Second phase particles and solute atoms have been used as an important constituent to design materials and processes due to their ability to control motion of grain boundaries. These particles limit motion of grain boundaries by the particle pinning mechanism. in pf-UBC, a model on an energetic approach to include the drag pressure (Friction Pressure) directly into the phase-field equation. It avoids the phenomenological modification of the grain-boundary kinetics through mobility. </p> <p> The bulk energy of grain $i$, $G_i$ is considered in comparison with a standard state. In a case where bulk energy of all grains is equal ($G_i = G_j$), $f_d = const$. and the driving pressure for grain-boundary movement is only due to its curvature. However, in a case of different bulk energies, $G_i \\neq G_j$ , there is an additional driving pressure of $\\Delta G_{ij} = G_j \u2212 G_i$ on the grain boundaries. In this situation, $f_d$ interpolates the bulk energy of each grain across the grain boundary. For two order parameters the contribution to the local energy density due to the bulk energy is written as:  </p>  $$ f_d = 3\\sum_{i=1}^{2}\\sum_{j \\neq i}^{2}\\left( \\frac{\\phi^2_{ij}}{2} - \\frac{\\phi^3_{ij}}{3}\\right) \\Delta G_{ij} + \\frac{1}{2}\\sum_{i=1}^{2} G_i \\\\[2em] \\phi_{ij} = \\frac{\\eta_i - \\eta_j +1}{2} $$  <p> The derivation of $f_d$ can be simplified as    $$ \\frac{\\partial f_d}{\\partial eta_i} = 3 \\eta_i \\eta_j \\Delta G_{ij} $$   Each pair of order parameters between \u03b7i and \u03b7j has a contribution to the $\\frac{\\partial f_d}{\\partial eta_i}$ term. Therefore, a set of evolution PDEs are obtained by generalizing equation over all order parameter pairs:   $$ \\frac{\\partial{\\eta_i}}{\\partial t} = -L\\frac{\\delta{F}}{\\delta{\\eta_i}} = -L\\left( \\frac{\\partial{f_0}}{\\partial \\eta_i} + \\frac{\\partial{f_d}}{\\partial \\eta_i}- \\kappa\\nabla^2\\eta_i \\right) \\\\[1.5em] \\frac{\\partial{\\eta_i}}{\\partial t} = -L\\left[ m\\left( {\\eta_i}^3 - {\\eta_i} + 3\\eta_i \\sum_{j\\neq i}^{N} {\\eta_j}^2\\right) - 3 \\eta_i \\sum_{j \\neq i}^{N} \\eta_j \\Delta G_{ij} - \\kappa\\nabla^2 \\eta_i\\right] $$   The detailed literature on friction pressure was presented by S. Shahandeh et al. (2012) </p> <p></p>"},{"location":"introduction/#references","title":"References","text":"<p> - Chen, Long-Qing, and Wei Yang. \"Computer simulation of the domain dynamics of a quenched system with a large number of nonconserved order parameters: The grain-growth kinetics.\" Physical Review B 50, no. 21 (1994): 15752.  - Chen, Long-Qing. \"A novel computer simulation for modeling grain growth.\" Scripta Metallurgica et Materialia;(United States) 32, no. 1 (1995).  - Moelans, Nele, Bart Blanpain, and Patrick Wollants. \"Quantitative analysis of grain boundary properties in a generalized phase field model for grain growth in anisotropic systems.\" Physical Review B\u2014Condensed Matter and Materials Physics 78, no. 2 (2008): 024113. -  - Fan, Danan, and Long-Qing Chen. \"Diffuse-interface description of grain boundary motion.\" Philosophical Magazine Letters 75, no. 4 (1997): 187-196. -  - Shahandeh, S., M. Greenwood, and Matthias Militzer. \"Friction pressure method for simulating solute drag and particle pinning in a multiphase-field model.\" Modelling and Simulation in Materials Science and Engineering 20, no. 6 (2012): 065008. </p>"}]}